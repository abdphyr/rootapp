{
  "openapi": "3.0.3",
  "info": {
    "title": "Abdumannon ecommerce app",
    "description": "This ecommerce app created in Laravel 9 abd MySql.",
    "contact": {
      "email": "abdphyr@gmail.com"
    },
    "version": "1.0.11"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:8000/ecommerceapi"
    },
    {
      "url": "https://abdecommerce.000webhostapp.com/ecommerceapi"
    }
  ],
  "tags": [
    {
      "name": "authentication",
      "description": "Auhtentication register, login, user, logout, refreshToken"
    },
    {
      "name": "categories",
      "description": "Categories crud"
    },
    {
      "name": "tags",
      "description": "Tags crud"
    },
    {
      "name": "products",
      "description": "Products crud"
    },
    {
      "name": "comments",
      "description": "Comments crud"
    }
  ],
  "paths": {
    "/comments": {
      "get": {
        "tags": [
          "comments"
        ],
        "summary": "Fetch comments belongs to certain product",
        "description": "Fetch comments belongs to certain product",
        "operationId": "Comments all",
        "parameters": [
          {
            "name": "product_id",
            "in": "query",
            "required": true,
            "explode": true,
            "description": "Get comments any product",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Comments fetched",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 1
                    },
                    "comments": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Comment"
                      }
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Comment"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "comments"
        ],
        "summary": "Create comment",
        "description": "Create comment",
        "operationId": "Create comment",
        "requestBody": {
          "description": "Create a new comment",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "product_id",
                  "body"
                ],
                "type": "object",
                "properties": {
                  "product_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "body": {
                    "type": "string",
                    "example": "This is my comment"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Commit created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/comments/{id}": {
      "get": {
        "tags": [
          "comments"
        ],
        "summary": "Get single comment",
        "description": "Get single comment",
        "operationId": "Get single comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Comment id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Comment fetched",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "comments"
        ],
        "summary": "Update comment",
        "description": "Update comment",
        "operationId": "Update comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Comment id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "description": "Update a comment",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "string",
                    "example": "This comment will be updated"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Comment updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "comments"
        ],
        "summary": "Delete single comment",
        "description": "Delete single comment",
        "operationId": "Delete single comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Comment id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Comment deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/register": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Register user",
        "description": "Register user",
        "operationId": "Register user",
        "requestBody": {
          "description": "Create a new user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterReqDTO"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RegisterReqDTO"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RegisterReqDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful user registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDTO"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Login user",
        "description": "Login user",
        "operationId": "addPet",
        "requestBody": {
          "description": "User login",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginReqDTO"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/LoginReqDTO"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/LoginReqDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful user login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDTO"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Logout current user",
        "description": "Logout current user",
        "operationId": "Logout",
        "responses": {
          "200": {
            "description": "Logout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User succesfully logout"
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User succesfully logout"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/refreshToken": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "RefreshToken current user",
        "description": "RefreshToken current user",
        "operationId": "RefreshToken",
        "responses": {
          "200": {
            "description": "RefreshToken",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "refreshToken": {
                      "type": "string",
                      "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL2xvZ2luIiwiaWF0IjoxNjczODgxNzg0LCJleHAiOjE2NzM4ODUzODQsIm5iZiI6MTY3Mzg4MTc4NCwianRpIjoic2x1eEo2eFFJZ3g3R2RXViIsInN1YiI6IjEiLCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.aZFmV2nAomc4HlyvR2tPzkY1HxtPBuCOdmzyG0Y12PE"
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "refreshToken": {
                      "type": "string",
                      "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL2xvZ2luIiwiaWF0IjoxNjczODgxNzg0LCJleHAiOjE2NzM4ODUzODQsIm5iZiI6MTY3Mzg4MTc4NCwianRpIjoic2x1eEo2eFFJZ3g3R2RXViIsInN1YiI6IjEiLCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.aZFmV2nAomc4HlyvR2tPzkY1HxtPBuCOdmzyG0Y12PE"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get authenticated user",
        "description": "Get authenticated user",
        "operationId": "Get user",
        "responses": {
          "200": {
            "description": "User get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/categories": {
      "get": {
        "tags": [
          "categories"
        ],
        "summary": "Get all categories",
        "description": "Get all categories",
        "operationId": "Get all categories",
        "responses": {
          "200": {
            "description": "Categories fetched",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "categories"
        ],
        "summary": "Create category",
        "description": "Create category",
        "operationId": "Create category",
        "requestBody": {
          "description": "Create a new category",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "info"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Electronics"
                  },
                  "info": {
                    "type": "string",
                    "example": "This products belongs to electronics"
                  },
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "example": null
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Category created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/categories/{id}": {
      "get": {
        "tags": [
          "categories"
        ],
        "summary": "Get single category",
        "description": "Get single category",
        "operationId": "Get single category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Category id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "categories"
        ],
        "summary": "Update category",
        "description": "Update category",
        "operationId": "Update category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Category id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "description": "Update a category",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Electronics"
                  },
                  "info": {
                    "type": "string",
                    "example": "This products belongs to electronics"
                  },
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "example": null
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Category created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "categories"
        ],
        "summary": "Delete single category",
        "description": "Delete single category",
        "operationId": "Delete single category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Category id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/tags": {
      "get": {
        "tags": [
          "tags"
        ],
        "summary": "Tags all",
        "description": "Tags all",
        "operationId": "Tags all",
        "responses": {
          "200": {
            "description": "Tags fetched",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tag"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tag"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tags"
        ],
        "summary": "Create tag",
        "description": "Create tag",
        "operationId": "Create tag",
        "requestBody": {
          "description": "Create a new tag",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "New"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Tag created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/tags/{id}": {
      "get": {
        "tags": [
          "tags"
        ],
        "summary": "Get single tag",
        "description": "Get single tag",
        "operationId": "Get single tag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Tag id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tag fetched",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "tags"
        ],
        "summary": "Update tag",
        "description": "Update tag",
        "operationId": "Update tag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Tag id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "description": "Update a tag",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "New"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Tag created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "tags"
        ],
        "summary": "Delete single tag",
        "description": "Delete single tag",
        "operationId": "Delete single tag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Tag id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tag deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/products": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Products all",
        "description": "Products all",
        "operationId": "Products all",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "explode": true,
            "description": "Pagination",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "explode": true,
            "description": "Searching products",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price",
            "in": "query",
            "required": false,
            "explode": true,
            "description": "Filter with price as '20:800' or '20:' or ':800'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "explode": true,
            "description": "Filter with category",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "required": false,
            "explode": true,
            "description": "Filter with tag",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "explode": true,
            "description": "Filter with sort as 'price' or 'price:up' or 'price:down'",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Products fetched",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minPrice": {
                      "type": "integer",
                      "example": 20
                    },
                    "maxPrice": {
                      "type": "integer",
                      "example": 20000
                    },
                    "products": {
                      "$ref": "#/components/schemas/PaginatedProducts"
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minPrice": {
                      "type": "integer",
                      "example": 20
                    },
                    "maxPrice": {
                      "type": "integer",
                      "example": 20000
                    },
                    "products": {
                      "$ref": "#/components/schemas/PaginatedProducts"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "products"
        ],
        "summary": "Create product",
        "description": "Create product",
        "operationId": "Create product",
        "requestBody": {
          "description": "Create a new product",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "category_id",
                  "name",
                  "price",
                  "info",
                  "images"
                ],
                "type": "object",
                "properties": {
                  "category_id": {
                    "type": "integer",
                    "example": 2
                  },
                  "name": {
                    "type": "string",
                    "example": "Macbook"
                  },
                  "price": {
                    "type": "integer",
                    "example": 900
                  },
                  "info": {
                    "type": "string",
                    "example": "This is info about product"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "example": 3
                    }
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Product created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Get single product",
        "description": "Get single product",
        "operationId": "Get single product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product fetched",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "products"
        ],
        "summary": "Update product",
        "description": "Update product",
        "operationId": "Update product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "description": "Update a product",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "category_id": {
                    "type": "integer",
                    "example": 2
                  },
                  "name": {
                    "type": "string",
                    "example": "Macbook"
                  },
                  "price": {
                    "type": "integer",
                    "example": 900
                  },
                  "info": {
                    "type": "string",
                    "example": "This is info about product"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "example": 3
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Product updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "products"
        ],
        "summary": "Delete single product",
        "description": "Delete single product",
        "operationId": "Delete single product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Comment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "body": {
            "type": "string",
            "example": "This is my comment"
          },
          "created_at": {
            "type": "string",
            "example": "2023-1-16"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "user_id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Mackbook"
          },
          "price": {
            "type": "integer",
            "example": 100
          },
          "info": {
            "type": "string",
            "example": "This is info about product"
          },
          "created_at": {
            "type": "string",
            "example": "2023-1-16"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            }
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "Image": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "url": {
            "type": "string",
            "example": "https:://"
          }
        }
      },
      "PaginatedProducts": {
        "type": "object",
        "properties": {
          "current_page": {
            "type": "integer",
            "example": 1
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductsItem"
            }
          },
          "last_page": {
            "type": "integer",
            "example": 3
          },
          "per_page": {
            "type": "integer",
            "example": 2
          },
          "total": {
            "type": "integer",
            "example": 6
          }
        }
      },
      "ProductsItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "user_id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "P"
          },
          "price": {
            "type": "integer",
            "example": 100
          },
          "info": {
            "type": "string",
            "example": "This is info about product"
          },
          "created_at": {
            "type": "string",
            "example": "2023-1-16"
          },
          "category_name": {
            "type": "string",
            "example": "Electronics"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "image": {
            "type": "string",
            "example": "https:://"
          }
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Electronics"
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Electronics"
          },
          "info": {
            "type": "string",
            "example": "This products belongs to electronics"
          },
          "created_at": {
            "type": "string",
            "example": "2023-1-16"
          },
          "image": {
            "type": "string",
            "example": "https:://"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Admin"
          },
          "email": {
            "type": "string",
            "example": "admin@gmail.com"
          },
          "phone": {
            "type": "integer",
            "format": "int64",
            "example": 884929098
          },
          "created_at": {
            "type": "string",
            "example": "2023-1-16"
          },
          "image": {
            "type": "string",
            "example": "https:://"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          }
        }
      },
      "AuthResponseDTO": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL2xvZ2luIiwiaWF0IjoxNjczODgxNzg0LCJleHAiOjE2NzM4ODUzODQsIm5iZiI6MTY3Mzg4MTc4NCwianRpIjoic2x1eEo2eFFJZ3g3R2RXViIsInN1YiI6IjEiLCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.aZFmV2nAomc4HlyvR2tPzkY1HxtPBuCOdmzyG0Y12PE"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "admin"
          }
        }
      },
      "LoginReqDTO": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "admin@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "admin9999"
          }
        }
      },
      "RegisterReqDTO": {
        "required": [
          "name",
          "email",
          "password",
          "password_confirmation"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Admin"
          },
          "email": {
            "type": "string",
            "example": "admin@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "admin9999"
          },
          "password_confirmation": {
            "type": "string",
            "example": "admin9999"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}